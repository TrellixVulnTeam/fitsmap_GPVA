"use strict";L.GridLayer.TiledMarkers=L.GridLayer.extend({tilePointCache:{},options:{tileURL:"",color:"#4C72B0",rowsPerCol:1/0},initialize:function(t){L.setOptions(this,t)},convertJSONtoHTMLTable:function(t){const e=["fm_y","fm_x","fm_cat"],o=Object.keys(t).length-e.length,i=this.options.rowsPerColumn;let n=Math.floor(o/(Number.isFinite(i)?i:o));Number.isFinite(i)&&o%i&&(n+=1);let s="<span>Catalog Information</span><table class='catalog-table'>";const a=Object.keys(t).filter(t=>!e.includes(t));let l=0;return a.forEach(e=>{console.log(e),0==l&&(s+="<tr>"),s+=`<td><b>${e}:<b></td><td>${t[e]}</td>`,(l+=1)==n&&(l=0,s+="</tr>")}),s+="</table>"},renderPopupContents:function(t,e){const o=e.getPopup();return fetch(e.options.assetPath).then(t=>{if(!t.ok)throw console.log(t),new Error("Failed to fetch JSON",t);return t.json()}).then(e=>{o.setContent(t.convertJSONtoHTMLTable(e)).update()}).catch(t=>{console.log("ERROR in Popup Rendering",t)}),"Loading..."},createClusterIcon:function(t){const e=L.latLng(t.global_y,t.global_x);if(!t.cluster){const o=L.popup({maxWidth:"auto"}).setLatLng(e).setContent(t=>this.renderPopupContents(this,t));return-1==t.a?L.circleMarker(e,{color:this.options.color,assetPath:`catalog_assets/${t.cat_path}/${t.catalog_id}.json`}).bindPopup(o):L.ellipse(e,[t.a,t.b],t.theta*(180/Math.PI)*-1,{color:this.options.color,assetPath:`catalog_assets/${t.cat_path}/${t.catalog_id}.json`}).bindPopup(o)}const o=t.point_count,i=o<100?"small":o<1e3?"medium":o<1e6?"large":"x-large",n=L.divIcon({html:`<div><span>${t.point_count_abbreviated}</span></div>`,className:`marker-cluster marker-cluster-${i}`,iconSize:L.point(40,40)});return L.marker(e,{icon:n}).bindPopup(`${t.global_y}, ${t.global_x}`)},parseTileResponse:function(t,e){200==e.status&&e.arrayBuffer().then(e=>{this.tilePointCache[t]||(this.tilePointCache[t]=[]);const o=new Pbf(e),i=new VectorTile(o).layers.Points;for(let e=0;e<i.length;e++){let o=i.feature(e);this.tilePointCache[t].push(this.createClusterIcon(o.properties).addTo(map))}}).catch(t=>console.log(t))},createTile:function(t,e){const o=2**t.z-t.y-1,i=(t.z,t.x,this.options.tileURL.replace("{z}",`${t.z}`).replace("{y}",`${o}`).replace("{x}",`${t.x}`)),n=`${t.z},${t.y},${t.x}`;return fetch(i).then(t=>this.parseTileResponse(n,t)).catch(t=>{console.log(t)}),L.DomUtil.create("canvas","leaflet-tile")},clearItemsOLD:function(t){t.coords.z,t.coords.y,t.coords.x;if(t.coords.z!=map.getZoom()&&map.getZoom()<=this.options.maxNativeZoom){const e=Object.keys(this.tilePointCache).filter(e=>e[0]==`${t.coords.z}`);for(let t=0;t<e.length;t++){let o=e[t];for(let t=0;t<this.tilePointCache[o].length;t++)this.tilePointCache[o][t].remove();delete this.tilePointCache[o]}}else{const e=`${t.coords.z},${t.coords.y},${t.coords.x}`;if(e in this.tilePointCache){for(let t=0;t<this.tilePointCache[e].length;t++)this.tilePointCache[e][t].remove();delete this.tilePointCache[e]}}},clearItems:function(t){const e=`${t.coords.z},${t.coords.y},${t.coords.x}`;if(this.tilePointCache[e])for(;this.tilePointCache[e].length;){let t=this.tilePointCache[e].pop().remove();t=null}}}),L.gridLayer.tiledMarkers=function(t){const e=new L.GridLayer.TiledMarkers(t);return e.on("tileunload",e.clearItems),e};
